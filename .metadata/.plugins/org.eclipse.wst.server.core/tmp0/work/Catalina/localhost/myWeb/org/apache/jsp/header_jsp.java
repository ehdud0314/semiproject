/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.64
 * Generated at: 2021-04-27 02:06:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import first.member.model.vo.Member;

public final class header_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("first.member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.print( request.getAttribute("msg") );
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><a href=\"#\">메뉴1</a></li>\r\n");
      out.write("\t\t<li><a href=\"#\">메뉴2</a></li>\r\n");
      out.write("\t\t<li><a href=\"#\">메뉴3</a></li>\r\n");
      out.write("\t\t<li><a href=\"#\">메뉴4</a></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");

Member member = (Member)session.getAttribute("member");
if (member == null){ 

      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("\t<form id=\"frm\">\r\n");
      out.write("\t\t<p>아이디: <input type=\"text\" name=\"id\" id=\"id\"></p>\r\n");
      out.write("\t\t<p>비밀번호: <input type=\"password\" name=\"passwd\" id=\"passwd\"></p>\r\n");
      out.write("\t\t<button type=\"button\" id=\"btnLogin\">로그인하기</button>\r\n");
      out.write("\t\t<button type=\"button\" id=\"btnEnroll\" onclick=\"location.href='view/member/memberInsert.jsp';\">회원가입</button>\r\n");
      out.write("\t</form>\r\n");
      out.write("</div>\r\n");

}  else {

      out.write("\r\n");
      out.write("<div>\r\n");
      out.write("\t<p> ");
      out.print( member.getId() );
      out.write("님! <span>등급 : ");
      out.print( member.getGrade() );
      out.write("</span> </p>\r\n");
      out.write("\t<button type=\"button\" onclick=\"#\">회원정보보기</button>\r\n");
      out.write("\t<button type=\"button\" id=\"btnLogout\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/logout';\">로그아웃</button>\r\n");
      out.write("</div>\t\r\n");
	
}

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script>\n");
      out.write("\t$(\"#btnLogin\").click(function() {\r\n");
      out.write("\t\tvar frm = document.getElementById(\"frm\");\r\n");
      out.write("\t\tif($(\"#id\").val().length==0){\r\n");
      out.write("\t\t\talert(\"입력된 아이디가 없습니다.\")\r\n");
      out.write("\t\t\treturn;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 유효성 체크 이후\t\r\n");
      out.write("\t\t//ajax\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"login\",\r\n");
      out.write("\t\t\ttype: \"post\",\r\n");
      out.write("\t\t\tdata: { \r\n");
      out.write("\t\t\tid : $(\"#id\").val(),\r\n");
      out.write("\t\t\tpasswd: $(\"#passwd\").val()\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t\tconsole.log(data);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(error) {\r\n");
      out.write("\t\t\talert(\"전송실패\");\r\n");
      out.write("\t\t\t}   // ajax 통신에 문제가 발생하면\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//submit\r\n");
      out.write("\t/* \tfrm.action = \"login\";\r\n");
      out.write("\t\tfrm.method = \"post\";\r\n");
      out.write("\t\tfrm.submit(); */\r\n");
      out.write("\t});\r\n");
      out.write("\t\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
